#!/usr/bin/with-contenv sh

. /app/cloudflare.sh

# Verify the $EMAIL and $API_KEY env variables are valid
statusCode=$(verifyToken)

if [ "$statusCode" != "200" ]; then
  echo "----------------------------------------------------------------"
  echo "ERROR: Invalid CloudFlare Credentials - $statusCode"
  echo "----------------------------------------------------------------"
  if [ -z "$EMAIL" ]; then
    echo "Make sure the API_KEY is correct. You can"
    echo "get your scoped CloudFlare API Token here:"
    echo "https://dash.cloudflare.com/profile/api-tokens"
  else
    echo "Make sure the EMAIL and API_KEY variables are correct. You can"
    echo "get your CloudFlare API Key here:"
    echo "https://www.cloudflare.com/a/profile"
    echo
    echo "If you are using a zone token please remove the EMAIL variable"
    echo "from this container."
  fi
  echo
  echo "----------------------------------------------------------------"
  exit 1
fi

# Get the ID of the zone from the CloudFlare API
CFZoneId=$(getZoneId)

if [ "$CFZoneId" == "null" ]; then
  echo "----------------------------------------------------------------"
  echo "ERROR: Zone for $ZONE was not found in your CloudFlare Account"
  echo "----------------------------------------------------------------"
  echo "Make sure the ZONE variable is correct and the domain exists"
  echo "in your CloudFlare account. You can add a new domain here:"
  echo
  echo "https://www.cloudflare.com/a/add-site"
  echo "----------------------------------------------------------------"
  exit 1
fi

echo "DNS Zone: $ZONE ($CFZoneId)"

# 下载CloudflareST脚本
echo
echo "----------------------------------------------------------------"
echo '下载CloudflareST脚本'
wget -nc $CloudflareSpeedTest_URL -O /download/CloudflareST_linux.tar.gz
if [ -f "/download/CloudflareST_linux.tar.gz" ]; then
  mkdir /workdir
  tar -zxf /download/CloudflareST_linux.tar.gz -C /workdir
  chmod +777 /workdir -R
  echo "下载完成"
  echo "解压完成"
else
  echo "下载失败，请重新部署容器"
fi
echo "----------------------------------------------------------------"
echo

# 优选cloudflare ip
echo "----------------------------------------------------------------"
echo "必须无代理环境运行此docker镜像，如宿主机需要代理环境，可以macvlan模式运行"
echo "----------------------------------------------------------------"
CloudflareST
BestIpAddress=$(getBestIpAddress)

if [ "$BestIpAddress" == "" ]; then
  echo "----------------------------------------------------------------"
  echo "ERROR: ip优选脚本运行失败"
  echo "----------------------------------------------------------------"
  exit 1
fi

# Get the ID of the dns record from the CloudFlare API
CFDnsRecordName=$(getDnsRecordName)
CFDnsRecordId=$(getDnsRecordId $CFZoneId $CFDnsRecordName)

# If the dns record does not exist, create it now.
if [ "$CFDnsRecordId" == "null" ]; then
  echo "DNS record for '$CFDnsRecordName' was not found in $ZONE zone. Creating now..."
  CFDnsRecordId=$(createDnsRecord $CFZoneId $CFDnsRecordName $BestIpAddress)

  if [ "$CFDnsRecordId" == "null" ]; then
    echo "----------------------------------------------------------------"
    echo "ERROR: Failed to create DNS record '$CFDnsRecordName'"
    echo "----------------------------------------------------------------"
    exit 1
  fi

fi

echo "DNS Record: $CFDnsRecordName ($CFDnsRecordId)"
echo "CF_ZONE_ID=\"$CFZoneId\" CF_RECORD_ID=\"$CFDnsRecordId\" CF_RECORD_NAME=\"$CFDnsRecordName\"" >/config/cloudflare.conf
echo "$CRON	/etc/cont-init.d/50-ddns" >/var/spool/cron/crontabs/root
